MaterialButton(onPressed: (){
              FirebaseAuth.instance.signOut();
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) {
                    return WelcomeScreen();
                  },
                ),
              );
            },
              color: Colors.amber,
              child: Text('Sign Out'),
            ),



            return FutureBuilder<List<Data>>(
                  future: fetchData(),
                  builder: (context, snapshot) {
                    if (snapshot.hasData) {
                      return ListView.builder(
                          itemCount: snapshot.data!.length,
                          itemBuilder: (BuildContext context, int index) {
                            return Container(
                              height: 75,
                              color: Colors.white,
                              child: Center(
                                child: Text(snapshot.data![index].title),
                              ),
                            );
                          });
                    } else if (snapshot.hasError) {
                      return Text(snapshot.error.toString());
                    }
                    // By default show a loading spinner.
                    return const CircularProgressIndicator();
                  },
                );




return Card(
                            child: Container(
                              padding: const EdgeInsets.all(8),
                              child: Row(
                                children: [
                                  GestureDetector(
                                    onTap: (){

                                    },
                                    child: Expanded(
                                      child: Column(
                                        crossAxisAlignment: CrossAxisAlignment.start,
                                        children: <Widget>[
                                          Icon(FontAwesomeIcons.ticket),
                                          Text(ticket[index].type),
                                          // Text(ticket[index].type.toString()),
                                          SizedBox(height: 5,),
                                          Icon(FontAwesomeIcons.calendarDays),
                                          Text(ticket[index].date),
                                          SizedBox(height: 5,),
                                          Icon(FontAwesomeIcons.person),
                                          // Text(ticket[index].quantity.toString()),
                                        ],
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          );



                          child: Text(snapshot.data![index].type),
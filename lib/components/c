MaterialButton(onPressed: (){
              FirebaseAuth.instance.signOut();
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) {
                    return WelcomeScreen();
                  },
                ),
              );
            },
              color: Colors.amber,
              child: Text('Sign Out'),
            ),



            return FutureBuilder<List<Data>>(
                  future: fetchData(),
                  builder: (context, snapshot) {
                    if (snapshot.hasData) {
                      return ListView.builder(
                          itemCount: snapshot.data!.length,
                          itemBuilder: (BuildContext context, int index) {
                            return Container(
                              height: 75,
                              color: Colors.white,
                              child: Center(
                                child: Text(snapshot.data![index].title),
                              ),
                            );
                          });
                    } else if (snapshot.hasError) {
                      return Text(snapshot.error.toString());
                    }
                    // By default show a loading spinner.
                    return const CircularProgressIndicator();
                  },
                );




return Card(
                            child: Container(
                              padding: const EdgeInsets.all(8),
                              child: Row(
                                children: [
                                  GestureDetector(
                                    onTap: (){

                                    },
                                    child: Expanded(
                                      child: Column(
                                        crossAxisAlignment: CrossAxisAlignment.start,
                                        children: <Widget>[
                                          Icon(FontAwesomeIcons.ticket),
                                          Text(ticket[index].type),
                                          // Text(ticket[index].type.toString()),
                                          SizedBox(height: 5,),
                                          Icon(FontAwesomeIcons.calendarDays),
                                          Text(ticket[index].date),
                                          SizedBox(height: 5,),
                                          Icon(FontAwesomeIcons.person),
                                          // Text(ticket[index].quantity.toString()),
                                        ],
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          );


class Transaction{
  final int id;
  final String tiket_number;
  final String time;
  final int amount;
  final String status;
  final int? price;
  final int? package_id;
  final int? user_id;

  Transaction({
    required this.id, required this.tiket_number,required this.time ,required this.amount, required this.status, required this.price, required this.package_id, required this.user_id
  });

  factory Transaction.fromJson(Map<String, dynamic> json) {
    return Transaction(
        id: json['id'],
        tiket_number: json['ticket_number'],
        time: json['time'],
        amount: json['amount'],
        status: json['status'],
        price: json['price'] as int?,
        package_id: json['package_id'] as int?,
        user_id: json['user_id'] as int?
    );
  }
}
                          child: Text(snapshot.data![index].type),